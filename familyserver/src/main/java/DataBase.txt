drop if exists user;
create table if not exists user
(
    userName text not null primary key,
    password text not null,
    email text not null,
    firstName text not null,
    lastName text not null,
    gender text not null,
    personID text not null,
    constraint ck_gender check (gender in ('m', 'f')),
    foreign key(personID) references personID(personID)
);

drop if exists personID;
create table if not exists personID
(
    personID text not null primary key,
    descendant text not null,
    firstName text not null,
    lastName text not null,
    gender text not null,
    father text,
    mother text,
    spouse text,
    foreign key(descendant) references user(userName),
    foreign key(father) references personID(personID),
    foreign key(mother) references personID(personID),
    foreign key(spouse) references personID(personID),
    constraint ck_gender check (gender in ('m', 'f'))
);

drop if exists event;
create table if not exists event
(
    eventID text not null primary key,
    descendant text not null,
    personID text not null,
    latitude decimal not null,
    longitude decimal not null,
    country text not null,
    city text not null,
    eventType text not null,
    year integer not null,
    foreign key(personID) references personID(personID),
    foreign key(descendant) references user(userName),
    constraint ck_event_type check (eventType in ('Birth', 'Baptism', 'Christening', 'Marriage', 'Death'))
);

drop if exists auth_token;
create table if not exists auth_token
(
    auth_code text not null primary key,
    auth_user text not null,
    time_stamp text not null,
    foreign key(auth_user) references user(userName)
);